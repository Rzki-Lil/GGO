{"version":3,"file":"static/js/161.82ebd056.chunk.js","mappings":"wLAGA,MAAMA,GAAWC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,MAAEC,EAAK,eAAEC,EAAc,eAAEC,EAAc,SAAEC,GAAUJ,EAAA,OACxEK,EAAAA,EAAAA,MAAA,MACEC,YACEC,EAAAA,EAAAA,IAAgBN,GAAS,mBAAqB,kBADrC,0CAE+BO,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oDAAmDE,SAC9DP,KAEHQ,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oDAAmDE,SAC9DN,KAEHO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oDAAmDE,SAC9DL,KAEHM,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kCAAiCE,SAAEJ,MAC9C,IA8FP,GA3FyBL,EAAAA,EAAAA,OACvBW,IAOO,IAPN,aACCC,EAAY,UACZC,EAAS,YACTC,EAAW,gBACXC,EAAe,EACfC,EAAC,mBACDC,GACDN,EACC,MAAMO,EAAehB,IACnB,OAAQA,GACN,KAAK,EACL,KAAK,EACL,KAAK,EACH,OACEQ,EAAAA,EAAAA,KAAA,QAAMH,UAAU,8BAA6BE,SAC1CO,EAAEG,UAAUC,SAGnB,KAAK,EACH,OACEV,EAAAA,EAAAA,KAAA,QAAMH,UAAU,8BAA6BE,SAC1CO,EAAEG,UAAUE,SAGnB,KAAK,EACH,OACEX,EAAAA,EAAAA,KAAA,QAAMH,UAAU,8BAA6BE,SAC1CO,EAAEG,UAAUG,SAGnB,KAAK,EACH,OACEZ,EAAAA,EAAAA,KAAA,QAAMH,UAAU,8BAA6BE,SAC1CO,EAAEG,UAAUI,OAGnB,KAAK,EACH,OACEb,EAAAA,EAAAA,KAAA,QAAMH,UAAU,8BAA6BE,SAC1CO,EAAEG,UAAUK,SAGnB,QACE,OAAO,KACX,EAGF,OACElB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uFAAsFE,SAAA,EACnGC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mFAAkFE,UAC/FC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,+BAA8BE,SAAEO,EAAES,iBAElDf,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAiBE,UAC9BH,EAAAA,EAAAA,MAAA,SAAOC,UAAU,yCAAwCE,SAAA,EACvDC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,iBAAgBE,UAC/BH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,yEAAwEE,SACnFO,EAAEd,SAELQ,EAAAA,EAAAA,KAAA,MAAIH,UAAU,yEAAwEE,SACnFO,EAAEU,gBAELhB,EAAAA,EAAAA,KAAA,MAAIH,UAAU,yEAAwEE,SACnFK,EAAYC,GAAmBC,EAAEW,cAEpCjB,EAAAA,EAAAA,KAAA,MAAIH,UAAU,yEAAwEE,SACnFO,EAAEY,cAITlB,EAAAA,EAAAA,KAAA,SAAOH,UAAU,8BAA6BE,SAC3CoB,MAAMC,KAAK,CAAEC,OAAQnB,IAAgB,CAACoB,EAAGC,IAAMA,EAAI,IAAGC,KACpDhC,IACCQ,EAAAA,EAAAA,KAACX,EAAQ,CAEPG,MAAOA,EACPC,eAAgBc,EAAmB,UAAWf,GAC9CE,eAAgBa,EAAmB,UAAWf,GAC9CG,SAAUa,EAAYhB,IAJjBA,cAWb,G","sources":["components/PredictionsTable.jsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { isDeterministic } from \"../utils/gameUtils\";\r\n\r\nconst TableRow = memo(({ round, player1Display, player8Display, noteText }) => (\r\n  <tr\r\n    className={`${\r\n      isDeterministic(round) ? \"bg-violet-900/20\" : \"bg-gray-900/80\"\r\n    } hover:bg-gray-800/90 transition-colors`}\r\n  >\r\n    <td className=\"px-3 py-2 text-sm text-gray-200 whitespace-nowrap\">\r\n      {round}\r\n    </td>\r\n    <td className=\"px-3 py-2 text-sm text-gray-200 whitespace-nowrap\">\r\n      {player1Display}\r\n    </td>\r\n    <td className=\"px-3 py-2 text-sm text-gray-200 whitespace-nowrap\">\r\n      {player8Display}\r\n    </td>\r\n    <td className=\"px-3 py-2 text-sm text-gray-200\">{noteText}</td>\r\n  </tr>\r\n));\r\n\r\nconst PredictionsTable = memo(\r\n  ({\r\n    currentRound,\r\n    opponents,\r\n    playerNames,\r\n    firstOpponentId,\r\n    t,\r\n    getOpponentDisplay,\r\n  }) => {\r\n    const getNoteText = (round) => {\r\n      switch (round) {\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n          return (\r\n            <span className=\"font-medium text-violet-300\">\r\n              {t.noteTexts.random}\r\n            </span>\r\n          );\r\n        case 3:\r\n          return (\r\n            <span className=\"font-medium text-violet-300\">\r\n              {t.noteTexts.swapR2}\r\n            </span>\r\n          );\r\n        case 5:\r\n          return (\r\n            <span className=\"font-medium text-violet-300\">\r\n              {t.noteTexts.swapR4}\r\n            </span>\r\n          );\r\n        case 6:\r\n          return (\r\n            <span className=\"font-medium text-violet-300\">\r\n              {t.noteTexts.r3R5}\r\n            </span>\r\n          );\r\n        case 7:\r\n          return (\r\n            <span className=\"font-medium text-violet-300\">\r\n              {t.noteTexts.swapR6}\r\n            </span>\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"mt-4 overflow-hidden border rounded-lg shadow-lg bg-gray-900/95 border-violet-500/30\">\r\n        <div className=\"px-4 py-2 bg-gradient-to-r from-violet-900/80 via-indigo-900/80 to-purple-900/80\">\r\n          <h2 className=\"text-lg font-bold text-white\">{t.predictions}</h2>\r\n        </div>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-700/50\">\r\n            <thead className=\"bg-gray-800/90\">\r\n              <tr>\r\n                <th className=\"px-3 py-2 text-xs font-medium tracking-wider text-left text-indigo-300\">\r\n                  {t.round}\r\n                </th>\r\n                <th className=\"px-3 py-2 text-xs font-medium tracking-wider text-left text-indigo-300\">\r\n                  {t.yourOpponent}\r\n                </th>\r\n                <th className=\"px-3 py-2 text-xs font-medium tracking-wider text-left text-indigo-300\">\r\n                  {playerNames[firstOpponentId] + t.opponentOf}\r\n                </th>\r\n                <th className=\"px-3 py-2 text-xs font-medium tracking-wider text-left text-indigo-300\">\r\n                  {t.notes}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-gray-800/50\">\r\n              {Array.from({ length: currentRound }, (_, i) => i + 1).map(\r\n                (round) => (\r\n                  <TableRow\r\n                    key={round}\r\n                    round={round}\r\n                    player1Display={getOpponentDisplay(\"player1\", round)}\r\n                    player8Display={getOpponentDisplay(\"player8\", round)}\r\n                    noteText={getNoteText(round)}\r\n                  />\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PredictionsTable;\r\n"],"names":["TableRow","memo","_ref","round","player1Display","player8Display","noteText","_jsxs","className","isDeterministic","children","_jsx","_ref2","currentRound","opponents","playerNames","firstOpponentId","t","getOpponentDisplay","getNoteText","noteTexts","random","swapR2","swapR4","r3R5","swapR6","predictions","yourOpponent","opponentOf","notes","Array","from","length","_","i","map"],"sourceRoot":""}