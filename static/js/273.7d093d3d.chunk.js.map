{"version":3,"file":"static/js/273.7d093d3d.chunk.js","mappings":"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","sources":["components/PlayersList.jsx"],"sourcesContent":["import React, { memo } from \"react\";\r\n\r\nconst PlayerCard = memo(\r\n  ({\r\n    id,\r\n    isFirst,\r\n    isEditing,\r\n    playerName,\r\n    t,\r\n    onStartEdit,\r\n    onSave,\r\n    onKeyDown,\r\n    onChange,\r\n  }) => (\r\n    <div\r\n      className={`p-2 transition-all duration-300 rounded-lg border shadow-lg ${\r\n        isFirst\r\n          ? \"bg-gradient-to-br from-violet-900/80 to-indigo-900/80 border-violet-500/50 hover:border-violet-400 hover:shadow-violet-500/20\"\r\n          : \"bg-gray-800/90 border-gray-600/50 hover:border-gray-500 hover:shadow-indigo-500/10\"\r\n      }`}\r\n    >\r\n      <div className=\"flex items-center\">\r\n        <div className=\"flex-1\">\r\n          {isFirst && (\r\n            <span className=\"text-xs font-semibold text-violet-300\">\r\n              {t.firstOpponent}\r\n            </span>\r\n          )}\r\n          <div\r\n            className={`text-base font-medium cursor-pointer ${\r\n              isFirst ? \"text-indigo-200\" : \"text-gray-300\"\r\n            }`}\r\n            onClick={onStartEdit}\r\n          >\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                placeholder={playerName}\r\n                onChange={onChange}\r\n                className={`w-full p-1 text-base font-medium text-white border rounded outline-none ${\r\n                  isFirst\r\n                    ? \"bg-gray-700/90 border-violet-500/50 focus:border-violet-400\"\r\n                    : \"bg-gray-700 border-gray-600 focus:border-gray-500\"\r\n                }`}\r\n                autoFocus\r\n                onBlur={onSave}\r\n                onKeyDown={onKeyDown}\r\n              />\r\n            ) : (\r\n              playerName\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n);\r\n\r\nconst PlayersList = memo(\r\n  ({\r\n    playerNames,\r\n    firstOpponentId,\r\n    t,\r\n    handleFirstOpponentChange,\r\n    editingName,\r\n    startEditName,\r\n    savePlayerName,\r\n    handleNameKeyDown,\r\n    setTempName,\r\n  }) => {\r\n    return (\r\n      <div className=\"p-4 transition-all border rounded-lg shadow-xl bg-gray-900/80 backdrop-blur-md border-violet-500/30 hover:shadow-violet-500/10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-lg font-bold text-white\">{t.players}</h2>\r\n          <div className=\"flex items-center gap-2\">\r\n            <label className=\"text-xs font-medium text-indigo-200\">\r\n              {t.firstOpponent}\r\n            </label>\r\n            <select\r\n              value={firstOpponentId}\r\n              onChange={(e) => handleFirstOpponentChange(e.target.value)}\r\n              className=\"px-2 py-1 text-xs font-medium text-white transition-colors border rounded shadow-md bg-gray-800/90 border-violet-500/50 hover:border-violet-400\"\r\n            >\r\n              {[2, 3, 4, 5, 6, 7, 8].map((id) => (\r\n                <option key={id} value={id}>\r\n                  {playerNames[id]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <PlayerCard\r\n            id={1}\r\n            isFirst={false}\r\n            isEditing={editingName === 1}\r\n            playerName={playerNames[1]}\r\n            t={t}\r\n            onStartEdit={() => !editingName && startEditName(1)}\r\n            onSave={(e) => savePlayerName(1, e.target.value)}\r\n            onKeyDown={(e) => handleNameKeyDown(e, 1)}\r\n            onChange={(e) => setTempName(e.target.value)}\r\n          />\r\n\r\n          {[2, 3, 4, 5, 6, 7, 8].map((id) => (\r\n            <PlayerCard\r\n              key={id}\r\n              id={id}\r\n              isFirst={id === firstOpponentId}\r\n              isEditing={editingName === id}\r\n              playerName={playerNames[id]}\r\n              t={t}\r\n              onStartEdit={() => !editingName && startEditName(id)}\r\n              onSave={(e) => savePlayerName(id, e.target.value)}\r\n              onKeyDown={(e) => handleNameKeyDown(e, id)}\r\n              onChange={(e) => setTempName(e.target.value)}\r\n            />\r\n          ))}\r\n\r\n          <div className=\"mt-2 text-center\">\r\n            <p className=\"text-xs italic text-gray-400\">\r\n              {t.clickToChange}\r\n              <span className=\"ml-1 text-violet-400\">â€¢</span>\r\n              <span className=\"ml-1 text-gray-400\">{t.enterToContinue}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayersList;\r\n"],"names":["PlayerCard","memo","_ref","id","isFirst","isEditing","playerName","t","onStartEdit","onSave","onKeyDown","onChange","_jsx","className","children","_jsxs","firstOpponent","onClick","type","placeholder","autoFocus","onBlur","_ref2","playerNames","firstOpponentId","handleFirstOpponentChange","editingName","startEditName","savePlayerName","handleNameKeyDown","setTempName","players","value","e","target","map","clickToChange","enterToContinue"],"sourceRoot":""}