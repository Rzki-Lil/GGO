{"version":3,"file":"static/js/804.873a3556.chunk.js","mappings":"0RAeA,MAAMA,EAAc,CAClBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGIC,EAAoB,CACxB,iCACA,sDACA,6EACA,sBACA,wDACA,0EACA,gCACA,wDACA,6EACA,wFACA,2GAGIC,EAAaC,IAA4C,IAA3C,SAAEC,EAAQ,UAAEC,EAAS,aAAEC,GAAcH,EACvD,MAAOI,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,GAErDC,EAAIC,EAAAA,EAAaP,GAEjBQ,EAAoBC,IAEtBL,EADgB,SAAdK,EACoBC,GALD,KAMnBA,EAA4B,EAAIA,EAAO,EAGnBA,GACX,IAATA,EAVmB,GAUaA,EAAO,EAE3C,EAGF,OAAKT,GAGHU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iIAAgIC,SAAA,EAC7IC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BC,SAAEP,EAAES,MAAMC,SACtDL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,sCAAqCC,SAAA,CAClDV,EAAkB,MAxBN,YA6BnBW,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UACEM,QAASA,IAAMT,EAAiB,QAChCI,UAAU,gIAA+HC,UAEzIF,EAAAA,EAAAA,KAAA,OACEO,MAAM,6BACNN,UAAU,UACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAcR,UAErBF,EAAAA,EAAAA,KAAA,QACEW,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,yBAKRX,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,UACtDF,EAAAA,EAAAA,KAAA,OACEe,IAAKzC,EAAYkB,EAAoB,GACrCwB,IAAK,eAAexB,IACpBS,UAAU,yDAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,0DAAyDC,SAAA,CACpEP,EAAES,MAAMC,MAAM,MAAIV,EAAEsB,KAAK,IAAEzB,MAE9BQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAC5ChB,EAAkBM,EAAoB,YAK7CQ,EAAAA,EAAAA,KAAA,UACEM,QAASA,IAAMT,EAAiB,QAChCI,UAAU,iIAAgIC,UAE1IF,EAAAA,EAAAA,KAAA,OACEO,MAAM,6BACNN,UAAU,UACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAcR,UAErBF,EAAAA,EAAAA,KAAA,QACEW,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,yBAMVd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,SAC7DgB,MAAMC,KAAK,CAAEC,OA1FG,KA0FyB,CAACC,EAAGC,KAC5CtB,EAAAA,EAAAA,KAAA,UAEEM,QAASA,IAAMb,EAAqB6B,EAAI,GACxCrB,UAAW,sDACTT,IAAsB8B,EAAI,EACtB,gBACA,iCAEN,aAAY,eAAeA,EAAI,KAP1BA,YA7EM,IAyFf,EAIV,EAAeC,EAAAA,KAAWpC,E","sources":["components/HowToGuide.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { translations } from \"../translations/languages\";\r\n\r\nimport howTo1 from \"../howTo/1.png\";\r\nimport howTo2 from \"../howTo/2.png\";\r\nimport howTo3 from \"../howTo/3.png\";\r\nimport howTo4 from \"../howTo/4.png\";\r\nimport howTo5 from \"../howTo/5.png\";\r\nimport howTo6 from \"../howTo/6.png\";\r\nimport howTo7 from \"../howTo/7.png\";\r\nimport howTo8 from \"../howTo/8.png\";\r\nimport howTo9 from \"../howTo/9.png\";\r\nimport howTo10 from \"../howTo/10.png\";\r\nimport howTo11 from \"../howTo/11.png\";\r\n\r\nconst howToImages = [\r\n  howTo1,\r\n  howTo2,\r\n  howTo3,\r\n  howTo4,\r\n  howTo5,\r\n  howTo6,\r\n  howTo7,\r\n  howTo8,\r\n  howTo9,\r\n  howTo10,\r\n  howTo11,\r\n];\r\n\r\nconst slideDescriptions = [\r\n  \"Perhatikan Lawan Pertama anda.\",\r\n  \"Pilih player lawan pertama anda pada menu dropdown.\",\r\n  \"Perhatikan lawan kedua anda, dan lawan kedua dari lawan pertama sebelumnya\",\r\n  \"Input pada Round 2.\",\r\n  \"Lawan berikutnya akan diisi secara otomatis di tabel.\",\r\n  \"Perhatikan kembali lawan anda, dan lawan dari lawan pertama sebelumnya.\",\r\n  \"Input kedua nya pada Round 4.\",\r\n  \"Lawan berikutnya akan diisi secara otomatis di tabel.\",\r\n  \"Perhatikan lawan anda di Round 3, dan lawan dari lawan pertama sebelumnya.\",\r\n  \"input pada Round 6, di kedua Card *note: jangan sampai terbalik, perhatikan nama nya.\",\r\n  \"Hasil prediksi selesai, *note: prediksi akan berubah ketika ada satu atau dua player yang TERELIMINASI.\",\r\n];\r\n\r\nconst HowToGuide = ({ language, showHowTo, setShowHowTo }) => {\r\n  const [currentHowToImage, setCurrentHowToImage] = useState(1);\r\n  const totalHowToImages = 11;\r\n  const t = translations[language];\r\n\r\n  const changeHowToImage = (direction) => {\r\n    if (direction === \"next\") {\r\n      setCurrentHowToImage((prev) =>\r\n        prev === totalHowToImages ? 1 : prev + 1\r\n      );\r\n    } else {\r\n      setCurrentHowToImage((prev) =>\r\n        prev === 1 ? totalHowToImages : prev - 1\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!showHowTo) return null;\r\n\r\n  return (\r\n    <div className=\"lg:col-span-3\">\r\n      <div className=\"p-4 transition-all border rounded-lg shadow-xl bg-gray-900/80 backdrop-blur-md border-violet-500/30 hover:shadow-violet-500/10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-lg font-bold text-white\">{t.howTo.title}</h2>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <span className=\"text-sm font-medium text-indigo-300\">\r\n              {currentHowToImage} / {totalHowToImages}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative\">\r\n          <button\r\n            onClick={() => changeHowToImage(\"prev\")}\r\n            className=\"absolute z-10 p-2 transition-all transform -translate-y-1/2 bg-black rounded-full opacity-70 left-2 top-1/2 hover:opacity-100\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M15 19l-7-7 7-7\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          <div className=\"overflow-hidden rounded-lg\">\r\n            <div className=\"relative aspect-[16/9] md:aspect-[21/9]\">\r\n              <img\r\n                src={howToImages[currentHowToImage - 1]}\r\n                alt={`How to step ${currentHowToImage}`}\r\n                className=\"object-contain w-full h-full rounded-lg shadow-lg\"\r\n              />\r\n            </div>\r\n            <div className=\"p-3 text-center md:p-4 bg-gray-800/90\">\r\n              <h3 className=\"mb-2 text-base font-semibold text-indigo-300 md:text-lg\">\r\n                {t.howTo.title} - {t.step} {currentHowToImage}\r\n              </h3>\r\n              <p className=\"text-xs text-gray-300 md:text-sm\">\r\n                {slideDescriptions[currentHowToImage - 1]}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => changeHowToImage(\"next\")}\r\n            className=\"absolute z-10 p-2 transition-all transform -translate-y-1/2 bg-black rounded-full opacity-70 right-2 top-1/2 hover:opacity-100\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M9 5l7 7-7 7\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center mt-4 space-x-1 md:space-x-2\">\r\n          {Array.from({ length: totalHowToImages }, (_, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={() => setCurrentHowToImage(i + 1)}\r\n              className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-all ${\r\n                currentHowToImage === i + 1\r\n                  ? \"bg-violet-500\"\r\n                  : \"bg-gray-600 hover:bg-gray-400\"\r\n              }`}\r\n              aria-label={`Go to image ${i + 1}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(HowToGuide);\r\n"],"names":["howToImages","howTo1","howTo2","howTo3","howTo4","howTo5","howTo6","howTo7","howTo8","howTo9","howTo10","howTo11","slideDescriptions","HowToGuide","_ref","language","showHowTo","setShowHowTo","currentHowToImage","setCurrentHowToImage","useState","t","translations","changeHowToImage","direction","prev","_jsx","className","children","_jsxs","howTo","title","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","alt","step","Array","from","length","_","i","React"],"sourceRoot":""}